<?php

namespace App\Http\Controllers;

use App\Hotel;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Log;

class HotelController extends Controller
{

    protected function distanceTo($lat1, $lon1, $lat2, $lon2, $unit) {
        if (($lat1 == $lat2) && ($lon1 == $lon2)) {
          return 0;
        }
        else {
          $theta = $lon1 - $lon2;
          $dist = sin(deg2rad($lat1)) * sin(deg2rad($lat2)) +  cos(deg2rad($lat1)) * cos(deg2rad($lat2)) * cos(deg2rad($theta));
          $dist = acos($dist);
          $dist = rad2deg($dist);
          $miles = $dist * 60 * 1.1515;
          $unit = strtoupper($unit);

          if ($unit == "K") {
            return ($miles * 1.609344); //Kilo meters
            // return $miles;
          }
        }
    }
    protected function isNearBy($lat1, $lon1, $lat2, $lon2){
        dd($lat1);
        $distance = distanceTo($lat1, -$lon1, $lat2,$lon2, "K");
        if($distance>5.0) return true;

    }
    public function index(Request $request)
    {
        return Hotel::all();
    }

    public function indexNearBy($longitude,$latitude)
    {
        Log::debug($longitude);
        distanceTo($latitude, -$longitude, 29.46786, -98.53506, "M");


        $hotelsNearBy = array_filter(Hotel::all(),"isNearBy");
        return Hotel::all();
    }

    public function show(Hotel $hotel)
    {
        return $hotel;
    }

    public function store(Request $request)
    {
        $hotel = Hotel::create($request->all());

        return response()->json($hotel, 201);
    }

    public function update(Request $request, Hotel $hotel)
    {
        $hotel->update($request->all());

        return response()->json($hotel, 200);
    }

    public function delete(Request $request, Hotel $hotel)
    {
        $hotel->delete();

        return response()->json(null, 204);
    }
}
